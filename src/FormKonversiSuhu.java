
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.event.ItemEvent;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Muhammad Hapi
 */
public class FormKonversiSuhu extends javax.swing.JFrame {

    /**
     * Creates new form FormKonversiSuhu
     */
    public FormKonversiSuhu() {
        initComponents();
        
        // menambahkan ItemListener untuk setiap JRadioButton
        rdbtnCelcius.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                lakukanKonversi();
            }
        });

        rdbtnFahrenheit.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                lakukanKonversi();
            }
        });

        rdbtnKelvin.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                lakukanKonversi();
            }
        });

        rdbtnReamur.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                lakukanKonversi();
            }
        });

        // menambahkan DocumentListener ke jTextField1
        txtInput.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                lakukanKonversi();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                lakukanKonversi();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                lakukanKonversi();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        txtHasil = new javax.swing.JTextField();
        comboBoxSuhu = new javax.swing.JComboBox<>();
        rdbtnCelcius = new javax.swing.JRadioButton();
        rdbtnFahrenheit = new javax.swing.JRadioButton();
        rdbtnKelvin = new javax.swing.JRadioButton();
        rdbtnReamur = new javax.swing.JRadioButton();
        btnKonversi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("APLIKASI KONVERSI SUHU");

        jLabel2.setText("Masukkan Suhu");

        jLabel3.setText("Konversi Ke Suhu");

        jLabel4.setText("Hasil Konversi");

        txtInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInputFocusGained(evt);
            }
        });
        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputKeyTyped(evt);
            }
        });

        comboBoxSuhu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Suhu...", "Celcius", "Fahrenheit", "Kelvin", "Reamur" }));

        buttonGroup1.add(rdbtnCelcius);
        rdbtnCelcius.setText("Celcius");

        buttonGroup1.add(rdbtnFahrenheit);
        rdbtnFahrenheit.setText("Fahrenheit");

        buttonGroup1.add(rdbtnKelvin);
        rdbtnKelvin.setText("Kelvin");

        buttonGroup1.add(rdbtnReamur);
        rdbtnReamur.setText("Reamur");

        btnKonversi.setText("KONVERSI");
        btnKonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonversiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnKonversi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rdbtnReamur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdbtnCelcius, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdbtnFahrenheit, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addComponent(rdbtnKelvin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHasil))
                            .addComponent(txtInput)
                            .addComponent(comboBoxSuhu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxSuhu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbtnCelcius)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnFahrenheit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnKelvin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnReamur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKonversi)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonversiActionPerformed
        try {
        // Ambil nilai suhu dari JTextField input
        double inputSuhu = Double.parseDouble(txtInput.getText());
        double hasil = 0;

        // Ambil skala asal dari ComboBox
        String skalaAsal = comboBoxSuhu.getSelectedItem().toString();

        // Tentukan skala tujuan dari RadioButton yang dipilih
        String skalaTujuan = "";
        if (rdbtnCelcius.isSelected()) {
            skalaTujuan = "Celcius";
        } else if (rdbtnFahrenheit.isSelected()) {
            skalaTujuan = "Fahrenheit";
        } else if (rdbtnKelvin.isSelected()) {
            skalaTujuan = "Kelvin";
        } else if (rdbtnReamur.isSelected()) {
            skalaTujuan = "Reamur";
        }

        // Jika skala asal sama dengan skala tujuan, tampilkan langsung tanpa konversi
        if (skalaAsal.equals(skalaTujuan)) {
            txtHasil.setText(String.valueOf(inputSuhu));
            return; // Hentikan proses konversi di sini
        }

           // Konversi suhu berdasarkan skala asal dan tujuan
           switch (skalaAsal) {
               case "Celcius":
                   switch (skalaTujuan) {
                       case "Fahrenheit":
                           hasil = inputSuhu * 9 / 5 + 32;
                           break;
                       case "Kelvin":
                           hasil = inputSuhu + 273.15;
                           break;
                       case "Reamur":
                           hasil = inputSuhu * 4 / 5;
                           break;
                       default:
                           break;
                   }      break;
               case "Fahrenheit":
                   switch (skalaTujuan) {
                       case "Celcius":
                           hasil = (inputSuhu - 32) * 5 / 9;
                           break;
                       case "Kelvin":
                           hasil = (inputSuhu - 32) * 5 / 9 + 273.15;
                           break;
                       case "Reamur":
                           hasil = (inputSuhu - 32) * 4 / 9;
                           break;
                       default:
                           break;
                   }      break;
               case "Kelvin":
                   switch (skalaTujuan) {
                       case "Celcius":
                           hasil = inputSuhu - 273.15;
                           break;
                       case "Fahrenheit":
                           hasil = (inputSuhu - 273.15) * 9 / 5 + 32;
                           break;
                       case "Reamur":
                           hasil = (inputSuhu - 273.15) * 4 / 5;
                           break;
                       default:
                           break;
                   }      break;
               case "Reamur":
                   switch (skalaTujuan) {
                       case "Celcius":
                           hasil = inputSuhu * 5 / 4;
                           break;
                       case "Fahrenheit":
                           hasil = inputSuhu * 9 / 4 + 32;
                           break;
                       case "Kelvin":
                           hasil = inputSuhu * 5 / 4 + 273.15;
                           break;
                       default:
                           break;
                   }      break;
               default:
                   break;
           }

            // Tampilkan hasil konversi di JTextField hasil
            txtHasil.setText(String.valueOf(hasil));
        } catch (NumberFormatException e) {
            // Tampilkan pesan error jika input tidak valid
            JOptionPane.showMessageDialog(this, "Input tidak valid! Masukkan angka.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnKonversiActionPerformed

    private void txtInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();  // Batalkan karakter jika bukan angka
        }
    }//GEN-LAST:event_txtInputKeyTyped

    private void txtInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInputFocusGained
        txtInput.setText("");
    }//GEN-LAST:event_txtInputFocusGained
    
    private void lakukanKonversi() {
    try {
        
        double input = Double.parseDouble(txtInput.getText());
        String skalaAsal = comboBoxSuhu.getSelectedItem().toString();
        double hasil = 0;

        // Pilih skala tujuan berdasarkan JRadioButton yang dipilih
        if (rdbtnCelcius.isSelected()) {
            hasil = Celcius(input, skalaAsal);
        } else if (rdbtnFahrenheit.isSelected()) {
            hasil = Fahrenheit(input, skalaAsal);
        } else if (rdbtnKelvin.isSelected()) {
            hasil = Kelvin(input, skalaAsal);
        } else if (rdbtnReamur.isSelected()) {
            hasil = Reamur(input, skalaAsal);
        }

        txtHasil.setText(String.format("%.2f", hasil));
        } catch (NumberFormatException e) {
            txtHasil.setText("Input tidak valid");
        }
    }
    
    private double Celcius(double input, String skalaAsal) {
        switch (skalaAsal) {
            case "Fahrenheit":
                return (input - 32) * 5 / 9;
            case "Kelvin":
                return input - 273.15;
            case "Reamur":
                return input * 5 / 4;
            default:
                return input; // Jika skala asal adalah Celsius
        }
    }

    private double Fahrenheit(double input, String skalaAsal) {
        switch (skalaAsal) {
            case "Celsius":
                return input * 9 / 5 + 32;
            case "Kelvin":
                return (input - 32) * 5 / 9 + 273.15;
            case "Reamur":
                return (input - 32) * 4 / 9;
            default:
                return input; // Jika skala asal adalah Fahrenheit
        }
    }

    private double Kelvin(double input, String skalaAsal) {
        switch (skalaAsal) {
            case "Celsius":
                return input + 273.15;
            case "Fahrenheit":
                return (input - 273.15) * 9 / 5 + 32;
            case "Reamur":
                return (input - 273.15) * 4 / 5;
            default:
                return input; // Jika skala asal adalah Kelvin
        }
    }

    private double Reamur(double input, String skalaAsal) {
        switch (skalaAsal) {
            case "Celsius":
                return input * 4 / 5;
            case "Fahrenheit":
                return input * 9 / 4 + 32;
            case "Kelvin":
                return input * 5 / 4 + 273.15;
            default:
                return input; // Jika skala asal adalah Reamur
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKonversiSuhu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKonversi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBoxSuhu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rdbtnCelcius;
    private javax.swing.JRadioButton rdbtnFahrenheit;
    private javax.swing.JRadioButton rdbtnKelvin;
    private javax.swing.JRadioButton rdbtnReamur;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables
}
